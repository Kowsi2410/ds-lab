#include <stdio.h>
#include <stdlib.h>

// Node structure
struct Node {
int data;
struct Node* next;
};

// Queue structure
struct Queue {
struct Node* front;
struct Node* rear;
};

// Function to initialize an empty queue
void initializeQueue(struct Queue* q) {
q->front = q->rear = NULL;
}

// Function to check if the queue is empty
int isEmpty(struct Queue* q) {

return q->front == NULL;
}

// Function to enqueue (insert) a new element into the queue
void enqueue(struct Queue* q, int value) {
// Create a new node
struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
if (newNode == NULL) {
printf("Memory allocation error\n");
exit(EXIT_FAILURE);
}
newNode->data = value;
newNode->next = NULL;

// If the queue is empty, set both front and rear to the new node
if (isEmpty(q)) {
q->front = q->rear = newNode;
} else {
// Otherwise, add the new node to the rear and update the rear pointer
q->rear->next = newNode;
q->rear = newNode;
}
}

// Function to dequeue (remove) an element from the queue
int dequeue(struct Queue* q) {
if (isEmpty(q)) {
printf("Queue underflow\n");
exit(EXIT_FAILURE);

}

// Get the data from the front node
int data = q->front->data;

// Move the front pointer to the next node
struct Node* temp = q->front;
q->front = q->front->next;

// If the queue becomes empty after dequeue, update the rear pointer to NULL
if (q->front == NULL) {
q->rear = NULL;
}

// Free the memory of the dequeued node
free(temp);

return data;
}

// Function to solve the Josephus problem
int josephus(struct Queue* q, int n, int k) {
// Enqueue people in the queue
for (int i = 1; i <= n; ++i) {
enqueue(q, i);
}

// Perform the Josephus elimination
while (!isEmpty(q)) {

for (int i = 1; i < k; ++i) {
// Move the front element to the rear for (k-1) times
int frontValue = dequeue(q);
enqueue(q, frontValue);
}

// Eliminate the k-th person
printf("%d ", dequeue(q));
}

return 0;
}

int main() {
struct Queue myQueue;
initializeQueue(&myQueue);

int n, k;
printf("Enter the total number of people (n): ");
scanf("%d", &n);
printf("Enter the counting interval (k): ");
scanf("%d", &k);

printf("Josephus Sequence: ");
josephus(&myQueue, n, k);

return 0;
}
